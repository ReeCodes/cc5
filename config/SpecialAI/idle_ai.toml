# specialai:idle_ai.toml
# This config contains options for idle behaviors; actions taken by mobs when they are bored.

  # Entity List fields: General format = [ "namespace:entity_type value1 value2 ...", ... ]
  #   Entity lists are arrays of entity types. Some entity lists specify a number of values linked to each entity type.
  #   Entity types are defined by their key in the entity registry, usually following the pattern
  #     'namespace:entity_name'.
  #   'default' can be used instead of an entity type registry key to provide default values for all entities.
  #   An asterisk '*' can be used to match multiple entity types. For example, 'minecraft:*' will match all vanilla
  #     entities.
  #   List entries by default match any entity type derived from (i.e. based on) their entity type. For example,
  #     '~minecraft:zombie'.
  #     There is no steadfast rule about extending, even in vanilla, but the hope is that mod-added mobs will extend
  #       their base mob.

  # Block List fields: General format = [ "namespace:block_name[property1=value1,...]", ... ]
  #   Block lists are arrays of blocks and partial block states.
  #   Blocks are defined by their key in the block registry, usually following the pattern 'namespace:block_name'.
  #   An asterisk '*' can be used to match multiple blocks. For example, 'minecraft:*' will match all vanilla blocks.
  #   List entries by default match any block state. The block states to match can be narrowed down by specifying
  #     properties. The syntax for block state properties is the same as for commands. Any properties not specified will
  #     match any value. For example, 'minecraft:beehive[honey_level=5]' will match any full beehives, regardless of the
  #     direction they face.


# Category: idle_general
# Options that affect all idle behaviors for monsters (griefing and fiddling).

  # Mobs' reach (from eye height) when targeting blocks. Player reach is about 4.5.
  # <Number> Range: ≥ 0.0, Default: 3.5
  idle_general.reach = 3.5

  # The range at which mobs will search for blocks to target horizontally (xz-plane) and vertically (y-axis).
  # <Integer> Range: ≥ 1, Default: 12
  idle_general.scan_range.horizontal = 12
  # <Integer> Range: ≥ 1, Default: 6
  idle_general.scan_range.vertical = 6

  # The number of ticks between each block scan.
  # <Integer> Range: ≥ 1, Default: 2
  idle_general.scan_delay = 2
  # The number of blocks each mob randomly searches to grief/fiddle with every "scan_delay" ticks.
  # <Integer> Range: ≥ 1, Default: 32
  idle_general.scan_count = 32
  # The maximum number of blocks that can be searched in any given tick by all mobs. 0 is no limit.
  # <Integer> Range: ≥ 0, Default: 3000
  idle_general.global_scan_count = 3000


# Category: idle_griefing
# Options to customize monsters' idle block breaking behavior.

  # List of mobs that can gain passive griefing AI (note that the entity must have task-based AI enabled).
  # Additional value after the entity type is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
  # <Entity List> Format: [ "namespace:entity_type value", ... ], Default: [ "minecraft:zombie 1.0",
  #   "minecraft:creeper 1.0" ]
  #    Range for Values: 0.0 ~ 1.0
  idle_griefing.entities.whitelist = [
    "minecraft:zombie 1.0",
    "minecraft:creeper 1.0"
  ]
  # <Entity List> Format: [ "namespace:entity_type", ... ], Default: []
  idle_griefing.entities.blacklist = []

  # If true, mobs will only grief blocks they have the tools to harvest.
  # For example, they will only break furnaces if they have a pickaxe.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_griefing.requires_tools = true

  # If true, blocks griefed by mobs will leave item drops.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_griefing.leaves_drops = true
  # If true, a loud snapping sound (the vanilla door break sound) will be played when a block is broken, which is
  #   audible regardless of distance.
  # <Boolean> Valid Values: { true, false }, Default: false
  idle_griefing.break_sound = false

  # The block breaking speed multiplier for mobs griefing blocks, relative to the player's block breaking speed.
  # <Number> Range: ≥ 0.0, Default: 0.5
  idle_griefing.break_speed = 0.5
  # If true, creepers will be upset about not having arms to grief blocks with and resort to what they know best.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_griefing.mad_creepers = true

  # If true, idle griefing AI will automatically target all light sources (light value > 1). This will do its best to
  #   avoid natural sources such as fire and redstone ore.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_griefing.targets.auto_target_lights = true
  # If true, idle griefing AI will automatically target all blocks that derive from the vanilla beds.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_griefing.targets.auto_target_beds = true
  # List of blocks that can be broken by the idle griefing AI.
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ "minecraft:farmland",
  #   "minecraft:wheat", "minecraft:potatoes", "minecraft:carrots", "minecraft:beetroots", "minecraft:pumpkin_stem",
  #   "minecraft:melon_stem", "minecraft:beehive", "minecraft:crafting_table", ... ]
  idle_griefing.targets.whitelist = [
    "minecraft:farmland",
    "minecraft:wheat",
    "minecraft:potatoes",
    "minecraft:carrots",
    "minecraft:beetroots",
    "minecraft:pumpkin_stem",
    "minecraft:melon_stem",
    "minecraft:beehive",
    "minecraft:crafting_table",
    "minecraft:furnace",
    "minecraft:ladder",
    "minecraft:enchanting_table",
    "minecraft:brewing_stand",
    "minecraft:anvil",
    "minecraft:chipped_anvil",
    "minecraft:damaged_anvil",
    "minecraft:scaffolding",
    "minecraft:loom",
    "minecraft:smoker",
    "minecraft:blast_furnace",
    "minecraft:cartography_table",
    "minecraft:fletching_table",
    "minecraft:grindstone",
    "minecraft:smithing_table",
    "minecraft:stonecutter",
    "securitycraft:reinforced_ladder",
    "securitycraft:reinforced_scaffolding",
    "druidcraft:woodcutter",
    "outer_end:azure_ladder",
    "engineersdecor:metal_rung_ladder",
    "engineersdecor:metal_rung_steps",
    "engineersdecor:treated_wood_ladder",
    "createaddition:furnace_burner",
    "createaddition:crude_burner",
    "forcecraft:force_furnace",
    "forcecraft:black_force_furnace",
    "forcecraft:blue_force_furnace",
    "forcecraft:brown_force_furnace",
    "forcecraft:cyan_force_furnace",
    "forcecraft:gray_force_furnace",
    "forcecraft:green_force_furnace",
    "forcecraft:light_blue_force_furnace",
    "forcecraft:light_gray_force_furnace",
    "forcecraft:lime_force_furnace",
    "forcecraft:magenta_force_furnace",
    "forcecraft:orange_force_furnace",
    "forcecraft:pink_force_furnace",
    "forcecraft:purple_force_furnace",
    "forcecraft:red_force_furnace",
    "forcecraft:white_force_furnace",
    "betterendforge:end_stone_furnace",
    "betterendforge:aeternium_anvil",
    "betterendforge:mossy_glowshroom_crafting_table",
    "betterendforge:mossy_glowshroom_ladder",
    "betterendforge:lacugrove_crafting_table",
    "betterendforge:lacugrove_ladder",
    "betterendforge:end_lotus_crafting_table",
    "betterendforge:end_lotus_ladder",
    "betterendforge:pythadendron_crafting_table",
    "betterendforge:pythadendron_ladder",
    "betterendforge:dragon_tree_crafting_table",
    "betterendforge:dragon_tree_ladder",
    "betterendforge:tenanea_crafting_table",
    "betterendforge:tenanea_ladder",
    "betterendforge:helix_tree_crafting_table",
    "betterendforge:helix_tree_ladder",
    "betterendforge:umbrella_tree_crafting_table",
    "betterendforge:umbrella_tree_ladder",
    "betterendforge:jellyshroom_crafting_table",
    "betterendforge:jellyshroom_ladder",
    "betterendforge:lucernia_crafting_table",
    "betterendforge:lucernia_ladder",
    "betterendforge:flavolite_furnace",
    "betterendforge:violecite_furnace",
    "betterendforge:sulphuric_rock_furnace",
    "betterendforge:virid_jadestone_furnace",
    "betterendforge:azure_jadestone_furnace",
    "betterendforge:sandy_jadestone_furnace",
    "betterendforge:umbralith_furnace",
    "betterendforge:thallasium_anvil",
    "betterendforge:terminite_anvil",
    "crumbs:spruce_crafting_table",
    "crumbs:birch_crafting_table",
    "crumbs:jungle_crafting_table",
    "crumbs:acacia_crafting_table",
    "crumbs:dark_oak_crafting_table",
    "crumbs:crimson_crafting_table",
    "crumbs:warped_crafting_table",
    "byg:aspen_crafting_table",
    "byg:baobab_crafting_table",
    "byg:blue_enchanted_crafting_table",
    "byg:cherry_crafting_table",
    "byg:cika_crafting_table",
    "byg:cypress_crafting_table",
    "byg:ebony_crafting_table",
    "byg:fir_crafting_table",
    "byg:green_enchanted_crafting_table",
    "byg:holly_crafting_table",
    "byg:jacaranda_crafting_table",
    "byg:mahogany_crafting_table",
    "byg:mangrove_crafting_table",
    "byg:maple_crafting_table",
    "byg:pine_crafting_table",
    "byg:rainbow_eucalyptus_crafting_table",
    "byg:redwood_crafting_table",
    "byg:skyris_crafting_table",
    "byg:willow_crafting_table",
    "byg:witch_hazel_crafting_table",
    "byg:zelkova_crafting_table",
    "byg:sythian_crafting_table",
    "byg:embur_crafting_table",
    "byg:palm_crafting_table",
    "byg:lament_crafting_table",
    "byg:bulbis_crafting_table",
    "byg:nightshade_crafting_table",
    "byg:ether_crafting_table",
    "byg:imparius_crafting_table",
    "byg:sythian_scaffolding",
    "tropicraft:bamboo_ladder",
    "blue_skies:bluebright_crafting_table",
    "blue_skies:starlit_crafting_table",
    "blue_skies:frostbright_crafting_table",
    "blue_skies:lunar_crafting_table",
    "blue_skies:dusk_crafting_table",
    "blue_skies:maple_crafting_table",
    "blue_skies:cherry_crafting_table",
    "blue_skies:snowcap_oven",
    "blue_skies:horizonite_forge",
    "blue_skies:bluebright_ladder",
    "blue_skies:starlit_ladder",
    "blue_skies:frostbright_ladder",
    "blue_skies:lunar_ladder",
    "blue_skies:dusk_ladder",
    "blue_skies:maple_ladder",
    "blue_skies:cherry_ladder",
    "eidolon:wooden_brewing_stand",
    "atum:kiln",
    "atum:glassblower_furnace",
    "atum:bone_ladder",
    "atum:limestone_furnace",
    "atum:palm_ladder",
    "atum:deadwood_ladder",
    "atum:palm_scaffolding",
    "atum:deadwood_scaffolding",
    "ceramics:kiln",
    "twilightforest:iron_ladder",
    "ftbic:iron_furnace",
    "endergetic:poise_ladder",
    "autumnity:maple_ladder",
    "abundance:jacaranda_ladder",
    "abundance:redbud_ladder",
    "environmental:kiln",
    "environmental:willow_ladder",
    "environmental:cherry_ladder",
    "environmental:wisteria_ladder",
    "bayou_blues:cypress_ladder",
    "upgrade_aquatic:driftwood_ladder",
    "upgrade_aquatic:river_ladder",
    "immersiveengineering:metal_ladder_none",
    "immersiveengineering:metal_ladder_alu",
    "immersiveengineering:metal_ladder_steel",
    "mana-and-artifice:spectral_crafting_table",
    "mana-and-artifice:spectral_anvil",
    "mana-and-artifice:spectral_stonecutter",
    "forbidden_arcanus:edelwood_ladder",
    "atmospheric:rosewood_ladder",
    "atmospheric:morado_ladder",
    "atmospheric:yucca_ladder",
    "atmospheric:kousa_ladder",
    "atmospheric:aspen_ladder",
    "atmospheric:grimwood_ladder",
    "quark:spruce_ladder",
    "quark:birch_ladder",
    "quark:jungle_ladder",
    "quark:acacia_ladder",
    "quark:dark_oak_ladder",
    "quark:crimson_ladder",
    "quark:warped_ladder",
    "quark:iron_ladder",
    "quark:matrix_enchanter",
    "charm:kiln",
    "charm:oak_ladder",
    "charm:spruce_ladder",
    "charm:birch_ladder",
    "charm:jungle_ladder",
    "charm:acacia_ladder",
    "charm:dark_oak_ladder",
    "charm:crimson_ladder",
    "charm:warped_ladder",
    "charm:woodcutter"
  ]
  # Like "grief_targets.whitelist", but these blocks will not be targeted if they have a loot table tag.
  # For example, unopened dungeon chests will not be targeted.
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ "minecraft:chest",
  #   "minecraft:ender_chest", "minecraft:trapped_chest", "minecraft:barrel", "securitycraft:keypad_chest",
  #   "lootr:lootr_inventory", "lootr:lootr_barrel", "lootr:lootr_chest", "lootr:lootr_trapped_chest", ... ]
  idle_griefing.targets.lootable_list = [
    "minecraft:chest",
    "minecraft:ender_chest",
    "minecraft:trapped_chest",
    "minecraft:barrel",
    "securitycraft:keypad_chest",
    "lootr:lootr_barrel",
    "lootr:lootr_inventory",
    "lootr:lootr_chest",
    "lootr:lootr_trapped_chest",
    "outer_end:azure_chest",
    "outer_end:azure_trapped_chest",
    "ba_bt:land_golem_chest",
    "ba_bt:land_chest",
    "betterendforge:mossy_glowshroom_chest",
    "betterendforge:mossy_glowshroom_barrel",
    "betterendforge:lacugrove_chest",
    "betterendforge:lacugrove_barrel",
    "betterendforge:end_lotus_chest",
    "betterendforge:end_lotus_barrel",
    "betterendforge:pythadendron_chest",
    "betterendforge:pythadendron_barrel",
    "betterendforge:dragon_tree_chest",
    "betterendforge:dragon_tree_barrel",
    "betterendforge:tenanea_chest",
    "betterendforge:tenanea_barrel",
    "betterendforge:helix_tree_chest",
    "betterendforge:helix_tree_barrel",
    "betterendforge:umbrella_tree_chest",
    "betterendforge:umbrella_tree_barrel",
    "betterendforge:jellyshroom_chest",
    "betterendforge:jellyshroom_barrel",
    "betterendforge:lucernia_chest",
    "betterendforge:lucernia_barrel",
    "crumbs:oak_barrel",
    "crumbs:birch_barrel",
    "crumbs:jungle_barrel",
    "crumbs:acacia_barrel",
    "crumbs:dark_oak_barrel",
    "crumbs:crimson_barrel",
    "crumbs:warped_barrel",
    "tropicraft:bamboo_chest",
    "blue_skies:bluebright_chest",
    "blue_skies:starlit_chest",
    "blue_skies:frostbright_chest",
    "blue_skies:lunar_chest",
    "blue_skies:dusk_chest",
    "blue_skies:maple_chest",
    "blue_skies:cherry_chest",
    "iceandfire:ghost_chest",
    "atum:sarcophagus",
    "atum:limestone_chest",
    "aquaculture:neptunes_bounty",
    "ars_nouveau:archwood_chest",
    "metalbarrels:copper_barrel",
    "metalbarrels:iron_barrel",
    "metalbarrels:silver_barrel",
    "metalbarrels:gold_barrel",
    "metalbarrels:diamond_barrel",
    "metalbarrels:obsidian_barrel",
    "metalbarrels:netherite_barrel",
    "metalbarrels:crystal_barrel",
    "endergetic:poise_chest",
    "endergetic:poise_trapped_chest",
    "autumnity:maple_chest",
    "autumnity:maple_trapped_chest",
    "abundance:jacaranda_chest",
    "abundance:jacaranda_trapped_chest",
    "abundance:redbud_chest",
    "abundance:redbud_trapped_chest",
    "environmental:willow_chest",
    "environmental:willow_trapped_chest",
    "environmental:cherry_chest",
    "environmental:cherry_trapped_chest",
    "environmental:wisteria_chest",
    "environmental:wisteria_trapped_chest",
    "bayou_blues:cypress_chest",
    "bayou_blues:cypress_trapped_chest",
    "upgrade_aquatic:driftwood_chest",
    "upgrade_aquatic:driftwood_trapped_chest",
    "upgrade_aquatic:river_chest",
    "upgrade_aquatic:river_trapped_chest",
    "atmospheric:rosewood_chest",
    "atmospheric:rosewood_trapped_chest",
    "atmospheric:morado_chest",
    "atmospheric:morado_trapped_chest",
    "atmospheric:yucca_chest",
    "atmospheric:yucca_trapped_chest",
    "atmospheric:kousa_chest",
    "atmospheric:kousa_trapped_chest",
    "atmospheric:aspen_chest",
    "atmospheric:aspen_trapped_chest",
    "atmospheric:grimwood_chest",
    "atmospheric:grimwood_trapped_chest",
    "quark:oak_chest",
    "quark:spruce_chest",
    "quark:birch_chest",
    "quark:jungle_chest",
    "quark:acacia_chest",
    "quark:dark_oak_chest",
    "quark:crimson_chest",
    "quark:warped_chest",
    "quark:nether_brick_chest",
    "quark:purpur_chest",
    "quark:prismarine_chest",
    "quark:mushroom_chest",
    "quark:oak_trapped_chest",
    "quark:spruce_trapped_chest",
    "quark:birch_trapped_chest",
    "quark:jungle_trapped_chest",
    "quark:acacia_trapped_chest",
    "quark:dark_oak_trapped_chest",
    "quark:crimson_trapped_chest",
    "quark:warped_trapped_chest",
    "quark:nether_brick_trapped_chest",
    "quark:purpur_trapped_chest",
    "quark:prismarine_trapped_chest",
    "quark:mushroom_trapped_chest",
    "charm:oak_barrel",
    "charm:spruce_barrel",
    "charm:birch_barrel",
    "charm:jungle_barrel",
    "charm:acacia_barrel",
    "charm:dark_oak_barrel",
    "charm:crimson_barrel",
    "charm:warped_barrel",
    "charm:oak_chest",
    "charm:oak_trapped_chest",
    "charm:spruce_chest",
    "charm:spruce_trapped_chest",
    "charm:birch_chest",
    "charm:birch_trapped_chest",
    "charm:jungle_chest",
    "charm:jungle_trapped_chest",
    "charm:acacia_chest",
    "charm:acacia_trapped_chest",
    "charm:dark_oak_chest",
    "charm:dark_oak_trapped_chest",
    "charm:crimson_chest",
    "charm:crimson_trapped_chest",
    "charm:warped_chest",
    "charm:warped_trapped_chest"
  ]
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: []
  idle_griefing.targets.blacklist = []


# Category: idle_fiddling
# Options to customize monsters' idle fiddling behavior (block interaction).

  # List of mobs that can gain passive fiddling AI (note that the entity must have task-based AI enabled).
  # Additional value after the entity type is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
  # <Entity List> Format: [ "namespace:entity_type value", ... ], Default: [ "minecraft:skeleton 1.0",
  #   "minecraft:stray 1.0", "minecraft:wither_skeleton 1.0", "minecraft:zombified_piglin 1.0", "minecraft:piglin 1.0" ]
  #    Range for Values: 0.0 ~ 1.0
  idle_fiddling.entities.whitelist = [
    "minecraft:skeleton 1.0",
    "minecraft:stray 1.0",
    "minecraft:wither_skeleton 1.0",
    "minecraft:zombified_piglin 1.0",
    "minecraft:piglin 1.0"
  ]
  # <Entity List> Format: [ "namespace:entity_type", ... ], Default: []
  idle_fiddling.entities.blacklist = []

  # If true, idle fiddling AI will automatically target all blocks that derive from
  # the vanilla levers and buttons.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_fiddling.targets.auto_target_switches = true
  # If true, idle fiddling AI will automatically target all non-metal blocks that derive
  # from the vanilla doors, fence gates, and trapdoors.
  # <Boolean> Valid Values: { true, false }, Default: true
  idle_fiddling.targets.auto_target_doors = true
  # List of blocks that can be interacted with by the idle fiddling AI.
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ "minecraft:repeater",
  #   "minecraft:comparator", "minecraft:tnt", "minecraft:cake" ]
  idle_fiddling.targets.whitelist = [
    "minecraft:repeater",
    "minecraft:comparator",
    "minecraft:tnt",
    "minecraft:cake"
  ]
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: []
  idle_fiddling.targets.blacklist = []


# Category: idle_hiding
# Options to customize monsters' idle hiding behavior. This causes the mob to crawl inside a container block and pop
#   out when the container is opened (or destroyed).

  # List of mobs that can gain passive hiding AI (note that the entity must have task-based AI enabled).
  # Additional value after the entity type is the chance (0.0 to 1.0) for entities of that type to spawn with the AI.
  # <Entity List> Format: [ "namespace:entity_type value", ... ], Default: [ "minecraft:creeper 1.0",
  #   "minecraft:spider 1.0" ]
  #    Range for Values: 0.0 ~ 1.0
  idle_hiding.entities.whitelist = [
    "minecraft:creeper 1.0",
    "minecraft:spider 1.0"
  ]
  # <Entity List> Format: [ "namespace:entity_type", ... ], Default: []
  idle_hiding.entities.blacklist = []

  # The chance for blocks (0.0 to 1.0) that have a loot table tag to be targetable by the idle hiding AI.
  # For example, only 25% of unopened dungeon chests will be targetable at the default setting.
  # <Number> Range: 0.0 ~ 1.0, Default: 0.25
  idle_hiding.targets.lootable_chance.base = 0.25
  # The chance for blocks (0.0 to 1.0) that have a loot table tag to be targetable by the idle hiding AI when specific
  #   environmental conditions are met.
  # <Environment List> Format: [ "value condition1 state1 & condition2 state2 & ...", ... ], Default: []
  #    Range for Values: 0.0 ~ 1.0
  idle_hiding.targets.lootable_chance.exceptions = []
  # List of blocks that can be hidden in by the idle hiding AI. Note that only blocks with tile entities are able to
  #   be hidden in.
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: [ "minecraft:chest",
  #   "minecraft:trapped_chest", "minecraft:barrel", "securitycraft:keypad_chest", "lootr:lootr_inventory",
  #   "lootr:lootr_barrel", "lootr:lootr_chest", "lootr:lootr_trapped_chest", "outer_end:azure_chest", ... ]
  idle_hiding.targets.whitelist = [
    "minecraft:chest",
    "minecraft:trapped_chest",
    "minecraft:barrel",
    "securitycraft:keypad_chest",
    "lootr:lootr_barrel",
    "lootr:lootr_inventory",
    "lootr:lootr_chest",
    "lootr:lootr_trapped_chest",
    "outer_end:azure_chest",
    "outer_end:azure_trapped_chest",
    "ba_bt:land_golem_chest",
    "ba_bt:land_chest",
    "betterendforge:mossy_glowshroom_chest",
    "betterendforge:mossy_glowshroom_barrel",
    "betterendforge:lacugrove_chest",
    "betterendforge:lacugrove_barrel",
    "betterendforge:end_lotus_chest",
    "betterendforge:end_lotus_barrel",
    "betterendforge:pythadendron_chest",
    "betterendforge:pythadendron_barrel",
    "betterendforge:dragon_tree_chest",
    "betterendforge:dragon_tree_barrel",
    "betterendforge:tenanea_chest",
    "betterendforge:tenanea_barrel",
    "betterendforge:helix_tree_chest",
    "betterendforge:helix_tree_barrel",
    "betterendforge:umbrella_tree_chest",
    "betterendforge:umbrella_tree_barrel",
    "betterendforge:jellyshroom_chest",
    "betterendforge:jellyshroom_barrel",
    "betterendforge:lucernia_chest",
    "betterendforge:lucernia_barrel",
    "crumbs:oak_barrel",
    "crumbs:birch_barrel",
    "crumbs:jungle_barrel",
    "crumbs:acacia_barrel",
    "crumbs:dark_oak_barrel",
    "crumbs:crimson_barrel",
    "crumbs:warped_barrel",
    "tropicraft:bamboo_chest",
    "blue_skies:bluebright_chest",
    "blue_skies:starlit_chest",
    "blue_skies:frostbright_chest",
    "blue_skies:lunar_chest",
    "blue_skies:dusk_chest",
    "blue_skies:maple_chest",
    "blue_skies:cherry_chest",
    "iceandfire:ghost_chest",
    "atum:sarcophagus",
    "atum:limestone_chest",
    "aquaculture:neptunes_bounty",
    "ars_nouveau:archwood_chest",
    "metalbarrels:copper_barrel",
    "metalbarrels:iron_barrel",
    "metalbarrels:silver_barrel",
    "metalbarrels:gold_barrel",
    "metalbarrels:diamond_barrel",
    "metalbarrels:obsidian_barrel",
    "metalbarrels:netherite_barrel",
    "metalbarrels:crystal_barrel",
    "endergetic:poise_chest",
    "endergetic:poise_trapped_chest",
    "autumnity:maple_chest",
    "autumnity:maple_trapped_chest",
    "abundance:jacaranda_chest",
    "abundance:jacaranda_trapped_chest",
    "abundance:redbud_chest",
    "abundance:redbud_trapped_chest",
    "environmental:willow_chest",
    "environmental:willow_trapped_chest",
    "environmental:cherry_chest",
    "environmental:cherry_trapped_chest",
    "environmental:wisteria_chest",
    "environmental:wisteria_trapped_chest",
    "bayou_blues:cypress_chest",
    "bayou_blues:cypress_trapped_chest",
    "upgrade_aquatic:driftwood_chest",
    "upgrade_aquatic:driftwood_trapped_chest",
    "upgrade_aquatic:river_chest",
    "upgrade_aquatic:river_trapped_chest",
    "atmospheric:rosewood_chest",
    "atmospheric:rosewood_trapped_chest",
    "atmospheric:morado_chest",
    "atmospheric:morado_trapped_chest",
    "atmospheric:yucca_chest",
    "atmospheric:yucca_trapped_chest",
    "atmospheric:kousa_chest",
    "atmospheric:kousa_trapped_chest",
    "atmospheric:aspen_chest",
    "atmospheric:aspen_trapped_chest",
    "atmospheric:grimwood_chest",
    "atmospheric:grimwood_trapped_chest",
    "quark:oak_chest",
    "quark:spruce_chest",
    "quark:birch_chest",
    "quark:jungle_chest",
    "quark:acacia_chest",
    "quark:dark_oak_chest",
    "quark:crimson_chest",
    "quark:warped_chest",
    "quark:nether_brick_chest",
    "quark:purpur_chest",
    "quark:prismarine_chest",
    "quark:mushroom_chest",
    "quark:oak_trapped_chest",
    "quark:spruce_trapped_chest",
    "quark:birch_trapped_chest",
    "quark:jungle_trapped_chest",
    "quark:acacia_trapped_chest",
    "quark:dark_oak_trapped_chest",
    "quark:crimson_trapped_chest",
    "quark:warped_trapped_chest",
    "quark:nether_brick_trapped_chest",
    "quark:purpur_trapped_chest",
    "quark:prismarine_trapped_chest",
    "quark:mushroom_trapped_chest",
    "charm:oak_barrel",
    "charm:spruce_barrel",
    "charm:birch_barrel",
    "charm:jungle_barrel",
    "charm:acacia_barrel",
    "charm:dark_oak_barrel",
    "charm:crimson_barrel",
    "charm:warped_barrel",
    "charm:oak_chest",
    "charm:oak_trapped_chest",
    "charm:spruce_chest",
    "charm:spruce_trapped_chest",
    "charm:birch_chest",
    "charm:birch_trapped_chest",
    "charm:jungle_chest",
    "charm:jungle_trapped_chest",
    "charm:acacia_chest",
    "charm:acacia_trapped_chest",
    "charm:dark_oak_chest",
    "charm:dark_oak_trapped_chest",
    "charm:crimson_chest",
    "charm:crimson_trapped_chest",
    "charm:warped_chest",
    "charm:warped_trapped_chest"
  ]
  # <Block List> Format: [ "namespace:block_name[properties]", ... ], Default: []
  idle_hiding.targets.blacklist = []
